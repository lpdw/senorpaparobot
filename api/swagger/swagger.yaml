swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
host: senorpapa.herokuapp.com
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  # - text/html
  - application/json
# format of the responses to the client (Accepts)
produces:
  # - text/html
  - application/json
paths:
  /products:
    get:
      summary: All stored products
      description: |
        The Products endpoint returns all the products stored in the database.
      tags:
        - Products

      parameters:
      - name: "authorization"
        in: "header"
        description: "Token for authorization"
        required: false
        type: string
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Products'
        406:
          description: Accept Header should be application/json or text/html
          schema:
            $ref: '#/definitions/Error'

    post:
      summary: Create a product
      description: This endpoint adds a new product on the database
      parameters:
      - in: body
        name: body
        description: Product object that needs to be added to the store
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
            quantity:
              type: number
            price:
              type: number
            type:
              type: string
      - name: "authorization"
        in: "header"
        description: "Token for authorization"
        required: false
        type: string
      responses:
        200:
          description: The created product in HTML
        201:
          description: The created product
          schema:
            $ref: '#/definitions/Products'
        400:
          description: Error in body
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Accept Header should be application/json or text/html
          schema:
            $ref: '#/definitions/Error'


    delete:
      summary: Delete all products
      parameters:
      - name: "authorization"
        in: "header"
        description: "Token for authorization"
        required: false
        type: string
      responses:
        204:
          description: Nothing
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Accept Header should be application/json or text/html
          schema:
            $ref: '#/definitions/Error'

  /products/{id}:
    get:
      summary: Return the product according to the given id
      description: |
        The product endpoint returns one song stored in the database based on the given id.
      tags:
        - products
      parameters:
      - name: "id"
        in: "path"
        description: "ID of product to return"
        required: true
        type: string
      - name: "authorization"
        in: "header"
        description: "Token for authorization"
        required: false
        type: string
      responses:
        200:
          description: An array of products
          schema:
            $ref: '#/definitions/Products'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found Product
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Accept Header should be application/json or text/html
          schema:
            $ref: '#/definitions/Error'

    put:
      summary: update a product
      description: |
        The Products endpoint updates the product for the given id, with the given data.
      tags:
        - Products
      parameters:
      - name: id
        in: path
        description: ID of product to return
        required: true
        type: string
      - name: "authorization"
        in: "header"
        description: "Token for authorization"
        required: false
        type: string
      - in: body
        name: body
        description: Product object that needs to be added to the store
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
            quantity:
              type: number
            price:
              type: number
            type:
              type: string
            createdAt:
              type: string
              format: date
            updatedAt:
              type: string
              format: date
      responses:
        200:
          description: The updated product
          schema:
            $ref: '#/definitions/Products'
        400:
          description: Error in body
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found Product for the given Id
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Accept Header should be application/json or text/html
          schema:
            $ref: '#/definitions/Error'

    delete/{id}:
      summary: Delete the product according the given Id
      parameters:
      - name: "id"
        in: "path"
        description: "ID of product to return"
        required: true
        type: "string"
      - name: "authorization"
        in: "header"
        description: "Token for authorization"
        required: false
        type: string
      responses:
        204:
          description: Nothing
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Accept Header should be application/json or text/html
          schema:
            $ref: '#/definitions/Error'

  /command:
    post:
      summary: Pass a command
      description: This endpoint check if the sent product list exists in database. If so, delete concerned items and send the id command back
      parameters:
      - in: body
        name: body
        description: Product list
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Products'
      - name: "authorization"
        in: "header"
        description: "Token for authorization"
        required: true
        type: string
      responses:
        200:
          description: Success
        400:
          description: Product not here
          schema:
            $ref: '#/definitions/Error'
        406:
          description: Bad JSON format
          schema:
            $ref: '#/definitions/Error'



  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Products:
    type: object
    properties:
      id:
        type: number
        description: Id given by the database
      name:
        type: string
      quantity:
        type: number
      price:
        type: number
      type:
        type: string
      createdAt:
        type: string
        format: date
      updatedAt:
        type: string

        format: date
  Error:
    type: string
